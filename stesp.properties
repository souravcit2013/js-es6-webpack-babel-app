# bundle a js application using webpack
- create a folder and give it a name

- open cmd and navigate to the created folder, run the command npm init --y. 
  It will create a package.json file.

- to install webpack, run the below commands,
  npm i webpack@4.12.0 webpack-cli@3.0.3 --save-dev

- Create a src folder in the root of the app directory. Create a js file inside the src folder,
  like index.js

- To create bundle of the index.js file open package.json file and navigate to the "scripts" attribute.
  add the below properties,
  "start": "webpack --mode development",
  "build": "webpack --mode production"

  In my code I was getting a error, so added it like,
  "start": "set NODE_OPTIONS=--openssl-legacy-provider && webpack-dev-server --mode development",
  "build": "set NODE_OPTIONS=--openssl-legacy-provider && webpack --mode production"

- now goto cmd and run the command, "npm run start", 
  after successfull run it will create a build folder with main.js file. Which has the js code.

- now run npm run build, it will format and optimize the main.js file for production use.

# to run the bundle.js through a html file, so that it can be visible from a browser
- create a webpack.config.js in the root folder
  add the below configuration inside it,
  const path = require('path')

  module.exports = {
      entry: path.resolve(__dirname, "app"), // rename src folder to 'app'
      output: {
          path: path.resolve(__dirname,"build"),
          filename: "esSixBundle.js"
      }
  }

- goto cmd and run the command "npm run start". the bundle.js file will create inside build folder.

- now install webpack-dev-server@3.1.4 with the following command,
  npm i webpack-dev-server@3.1.4 --save-dev

- in package.json file, change the "start" command to "webpack-dev-server --mode development"

- create a html file inside build folder. include src=bundle.js inside the script tag within head / body

- now add  the below devServer configuration inside the webpack.config.js
  devServer: {
        port: 2804,
        contentBase: path.resolve(__dirname,"build"),
  }

- run the command in cmd - "npm run start". Now open a browser tab and type localhost:PORT NUMBER,
  It will run the html along with the js file.

- install following bael packages,
  npm i babel-core@6.26.3 babel-loader@7.1.4 babel-preset-env@1.7.0 --save-dev

- configure babel within webpack.config.js
  inside module.exports write the following command,
  module: {
      rules: [
          {
              test: /\.js$/,
              exclude: /node_modules/,
              use: ["babel-loader"]
          }
      ]
  }

- create .babelrc file in the root of the folder. Write the following script inside it,
  {
    "presets": ["env"]
  }

- open cmd and run the command "npm run start"